1 REM PROGRAM: SPRITE-LANDER
2 REM BY JUSTIN BALDOCK

10 REM 
20 LET GS=0
21 REM GS=GAME STATE. 0=START, 1=INIT, 2=RUN, 255=END
30 REM MAIN LOOP
40 IF GS=0 THEN GOSUB 1000
60 IF GS=2 THEN GOSUB 4000
70 IF GS=255 THEN END
80 GOTO 30

1000 REM SETUP ALL VARIABLES, SPRITES ETC
1010 LET MS=0.5: REM MS=MOVE SPEED
1020 LET X=320: LET Y=240: REM PLAYER XY LOCATION
1030 LET SX=320: LET SY=240: REM PLAYER SPRITE XY LOCATION
1035 LET TX=0: TY=0: REM TILE SCROLL
1040 LET TH=0: LET TL=0: REM TEMP VARIABLES FOR SCROLL HIGH AND LOW
1045 LET G=0.04: REM GRAVITY
1050 LET VV=0: REM PLAYER VERTICAL VELOCITY
1060 LET HV=0: REM PLAYER HORIZONAL VELOCITY
1070 LET FU=1000: REM FUEL
1080 LET PF=0: REM PLAYER SPRITE FRAME

1200 REM SET PLAYER SPRITE DATA
1210 REM SPRITES START AT 1FC00
1220 VPOKE $1,$FC10,$00: REM ADDRESS 12:5
1230 VPOKE $1,$FC11,$02: REM $02=4BPP, $82=8BPP, ADDRESS $04000
1240 VPOKE $1,$FC12,$80: REM XPOS 128
1250 VPOKE $1,$FC13,$00: REM XPOS HIGH BIT
1270 VPOKE $1,$FC14,$80: REM YPOS 128
1280 VPOKE $1,$FC15,$00: REM YPOS HIGHT BIT
1300 VPOKE $1,$FC16,$0C: REM NO COLLISION, ZDEPTH 3, NO FLIP
1310 VPOKE $1,$FC17,$A0: REM $50=16X16 PIXELS $A0=32X32, PALETTE OFFSET PO

1400 REM SET LANDER ROCKET FLAME DATA
1410 VPOKE $1,$FC18,$60: REM ADDRESS 12:5
1420 VPOKE $1,$FC19,$02: REM $02=4BPP, $82=8BPP, ADDRESS $04600
1430 VPOKE $1,$FC1A,$80: REM XPOS 128
1440 VPOKE $1,$FC1B,$00: REM XPOS HIGH BIT
1450 VPOKE $1,$FC1C,$80: REM YPOS 128
1460 VPOKE $1,$FC1D,$00: REM YPOS HIGHT BIT
1470 VPOKE $1,$FC1E,$0C: REM NO COLLISION, ZDEPTH 3, NO FLIP
1480 VPOKE $1,$FC1F,$A0: REM $50=16X16 PIXELS $A0=32X32, PALETTE OFFSET PO

1500 REM LOAD SPRITE DATA IN TO VRAM
1510 GOSUB 10000

1600 REM SETUP SCREEN
1610 REM SCREEN $00: REM THIS WOULD BE 320X240 SCREEN SIZE

1700 REM SETUP TILES
1710 GOSUB 11000: REM LOAD TILES
1720 GOSUB 12000: REM LOAD MAO
1730 GOSUB 13000: REM CONFIGURE VERA

1900 LET GS=2: REM ALL INIT IS DONE, RUN THE GAME
1910 REM ENABLE SPRITES
1920 POKE $9F29,(PEEK($9F29)) OR %01000000
1930 RETURN

4000 REM RUN LOOP
4010 GET K$: REM READ IN KEYPRESSES
4020 GOSUB 9200: REM UPDATE HV
4040 GOSUB 9100: REM UPDATE VV
4050 REM ANIMATE SPRITE
4060 REM GOSUB 9000: REM UPDATE PLAYER X,Y
4065 GOSUB 5000: REM UPDATE PLAYER AND LAYER SCROLL
4070 GOSUB 9800: REM UPDATE DISPLAY
4080 PF = 0: GOSUB 8500: GOSUB 8600: REM RESET PLAYER FRAME TO 0
4090 IF K$="Q" THEN GS=255: RETURN
4100 GOTO 4000

8500 REM CHANGE PLAYER SPRITE FRAME
8510 IF PF=0 THEN VPOKE $1,$FC10,$00: REM $4000
8520 IF PF=1 THEN VPOKE $1,$FC10,$10: REM $4200
8530 IF PF=2 THEN VPOKE $1,$FC10,$20: REM $4400
8540 RETURN

8600 REM CHANGE LANDER FLAME FRAME
8610 IF PF=0 THEN VPOKE $1,$FC18,$30: REM $4600
8620 IF PF=3 THEN VPOKE $1,$FC18,$40: REM $4800
8630 IF PF=4 THEN VPOKE $1,$FC18,$50: REM $4A00
8640 RETURN

9000 REM UPDATE PLAYER LOCATION
9010 REM UPDATE X AND Y AND DO BOUND CHECKING
9020 X = INT(X+HV)
9030 IF X>608 THEN X=608
9040 IF X<0 THEN X=0
9050 Y = INT(Y+VV)
9060 IF Y>448 THEN Y=448
9070 IF Y<0 THEN Y=0
9080 GOSUB 9500: REM UPDATE VERA
9090 RETURN

5000 REM UPDATE PLAYER LOCATION
5001 REM UPDATE X AND Y AND DO BOUND CHECKING
5002 REM KEEP PLAYER CENTER AND UPDATE TILE SCROLL IF CAN
5003 REM OTHER WISE UPDATE SX AND SY (SCREEN-X AND SCREEN-Y)
5010 X=INT(X+HV): Y=INT(Y+VV): REM UPDATE X AND Y BASED ON VELOCITY
5020 IF X<0 THEN X=0
5025 IF X>1023 THEN X=1023
5030 IF Y<0 THEN Y=0
5035 IF Y>1023 THEN Y=1023
5040 IF X<320 THEN SX=X
5045 IF X>704 THEN SX=320+(X-704)
5050 IF Y<240 THEN SY=Y
5055 IF Y>784 THEN SY=240+(Y-784)
5060 TX=X-320: TY=Y-240: REM SET THE TILE SCROLL DIFFERENCE
5065 IF TX<0 THEN TX=0
5070 IF TX>384 THEN TX=384
5075 IF TY<0 THEN TY=0
5080 IF TY>544 THEN TY=544
5085 GOSUB 9600: REM UPDATE VERA FOR SPRITES
5090 GOSUB 9700: REM UPDATE VERA FOR TILE SCROLL
5095 RETURN

9100 REM UPDATE VV
9105 REM USE FUEL, CHANGE PLAYER SPRITE
9110 REM PLAYER FULL THRUST
9120 IF K$="W" THEN VV=VV-MS: FU=FU-MS: PF=4: GOSUB 8600
9130 REM PLAYER HALF THRUST
9140 IF K$="S" THEN VV=VV-(MS/2): FU=FU-(MS/2): PF=3: GOSUB 8600
9150 VV=VV+G: REM APPLY GRAVITY
9160 REM APPLY SPEED CHECKS
9170 IF VV>=3 THEN VV=3
9180 IF VV<=-3 THEN VV=-3
9190 RETURN

9200 REM UDPATE HV
9205 REM USE FUEL, CHANGE PLAYER SPRITE
9210 REM CHECK FOR PLAYER LEFT
9220 IF K$="A" THEN HV=HV-MS: FU=FU-MS: PF=1: GOSUB 8500
9230 REM CHECK FOR PLAYER RIGHT
9240 IF K$="D" THEN HV=HV+MS: FU=FU-MS: PF=2: GOSUB 8500
9250 REM APPLY SPEED CHECKS
9260 IF HV>3 THEN HV=3
9270 IF HV<-3 THEN HV=-3
9280 RETURN

9500 REM UPDATE SPRITE IN VERA
9510 VPOKE $1,$FC12,X AND $FF
9520 VPOKE $1,$FC13,(X AND $0300)/$100
9530 VPOKE $1,$FC14,Y AND $FF
9540 VPOKE $1,$FC15,(Y AND $0300)/$100
9545 REM UPDATE FLAME SPRITE LOCATION IN VERA
9550 VPOKE $1,$FC1A,(X) AND $FF
9560 VPOKE $1,$FC1B,((X) AND $0300)/$100
9570 VPOKE $1,$FC1C,(Y+32) AND $FF
9580 VPOKE $1,$FC1D,((Y+32) AND $0300)/$100
9590 RETURN

9600 REM UPDATE SPRITE IN VERA
9610 VPOKE $1,$FC12,SX AND $FF
9620 VPOKE $1,$FC13,(SX AND $0300)/$100
9630 VPOKE $1,$FC14,SY AND $FF
9640 VPOKE $1,$FC15,(SY AND $0300)/$100
9645 REM UPDATE FLAME SPRITE LOCATION IN VERA
9650 VPOKE $1,$FC1A,(SX) AND $FF
9660 VPOKE $1,$FC1B,((SX) AND $0300)/$100
9670 VPOKE $1,$FC1C,(SY+32) AND $FF
9680 VPOKE $1,$FC1D,((SY+32) AND $0300)/$100
9690 RETURN

9700 REM UPDATE LAYER TILE SCROLL IN VERA
9705 TH = INT(TX/ 255)
9710 TL = TX - (TH * 255)
9715 POKE $9F30,TL
9720 POKE $9F31,TH
9725 TH = INT(TY/ 255)
9730 TL = TY - (TH * 255)
9735 POKE $9F32,TL 
9740 POKE $9F33,TH
9750 RETURN

9800 REM DISPLAY HUD/INFO
9810 CLS
9820 PRINT "VV="VV "HV="HV"FUEL="FU
9830 RETURN

9900 REM DEBUG FUNCTION TO PRINT OUT DATA
9905 PRINT "PLAYER SPRITE DATA"
9910 PRINT "GRAPHIC"(VPEEK($F,$FC10))","(VPEEK($F,$FC11))
9920 PRINT "X"(VPEEK($F,$FC12))","(VPEEK($F,$FC13))
9930 PRINT "Y"(VPEEK($F,$FC14))","(VPEEK($F,$FC15))
9940 PRINT "MISC"(VPEEK($F,$FC16))","(VPEEK($F,$FC17))
9950 PRINT "THRUSTER SPRITE DATA"
9960 PRINT "GRAPHICS"(VPEEK($F,$FC18))","(VPEEK($F,$FC19))
9970 PRINT "X"(VPEEK($F ,$FC1A ))","(VPEEK($F,$FC1B))
9980 PRINT "Y"(VPEEK($F ,$FC1C ))","(VPEEK($F,$FC1D))
9990 PRINT "MISC"(VPEEK($F ,$FC1E ))","(VPEEK($F,$FC1F))
9995 RETURN

10000 REM LOAD SPRITES
10010 VLOAD "LANDER-SPRITE.BIN",8,0,$4000
10020 RETURN

11000 REM LOAD TILES EACH 16X16
11010 VLOAD "LANDER-TILES.BIN",8,0,$5000
11020 RETURN

12000 REM LOAD MAP DATA
12010 VLOAD "LANDER-MAP.BIN",8,1,$0000: REM 2ND 64K BANK OF VRAM
12020 RETURN

13000 REM CONFIGURE VERA LAYER0 FOR TILES LAYER 1 FOR HUD
13010 POKE $9F29, %00110001: REM TURN ON LAYER 0,1 AND VGA OUTPUT
13020 POKE $9F2D, %01010010: REM  MAP H X W, T256C, BITMAPE MODE, COLOR DEPTH
13030 POKE $9F2E, %10000000: REM MAP BASE AT $10000
13040 POKE $9F2F, %00101011: REM SET TILE BASE AT $5000 AND H=16 W=16
13050 COLOR 1,0: REM SET LAYER 1 COLORS
13060 RETURN
